circuit myCPU :
  module RegisterFile :
    input clock : Clock
    input reset : Reset
    output io : { flip wen : UInt<1>, flip waddr : UInt<5>, flip wdata : UInt<64>, flip raddr : UInt<5>[35], rdata : UInt<64>[35]}

    wire _reg_WIRE : UInt<64>[32] @[alu.scala 66:30]
    _reg_WIRE[0] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[1] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[2] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[3] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[4] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[5] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[6] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[7] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[8] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[9] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[10] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[11] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[12] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[13] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[14] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[15] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[16] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[17] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[18] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[19] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[20] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[21] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[22] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[23] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[24] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[25] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[26] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[27] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[28] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[29] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[30] <= UInt<64>("h0") @[alu.scala 66:30]
    _reg_WIRE[31] <= UInt<64>("h0") @[alu.scala 66:30]
    reg reg : UInt<64>[32], clock with :
      reset => (reset, _reg_WIRE) @[alu.scala 66:22]
    when io.wen : @[alu.scala 68:17]
      reg[io.waddr] <= io.wdata @[alu.scala 69:23]
    io.rdata[0] is invalid @[alu.scala 72:14]
    io.rdata[1] is invalid @[alu.scala 72:14]
    io.rdata[2] is invalid @[alu.scala 72:14]
    io.rdata[3] is invalid @[alu.scala 72:14]
    io.rdata[4] is invalid @[alu.scala 72:14]
    io.rdata[5] is invalid @[alu.scala 72:14]
    io.rdata[6] is invalid @[alu.scala 72:14]
    io.rdata[7] is invalid @[alu.scala 72:14]
    io.rdata[8] is invalid @[alu.scala 72:14]
    io.rdata[9] is invalid @[alu.scala 72:14]
    io.rdata[10] is invalid @[alu.scala 72:14]
    io.rdata[11] is invalid @[alu.scala 72:14]
    io.rdata[12] is invalid @[alu.scala 72:14]
    io.rdata[13] is invalid @[alu.scala 72:14]
    io.rdata[14] is invalid @[alu.scala 72:14]
    io.rdata[15] is invalid @[alu.scala 72:14]
    io.rdata[16] is invalid @[alu.scala 72:14]
    io.rdata[17] is invalid @[alu.scala 72:14]
    io.rdata[18] is invalid @[alu.scala 72:14]
    io.rdata[19] is invalid @[alu.scala 72:14]
    io.rdata[20] is invalid @[alu.scala 72:14]
    io.rdata[21] is invalid @[alu.scala 72:14]
    io.rdata[22] is invalid @[alu.scala 72:14]
    io.rdata[23] is invalid @[alu.scala 72:14]
    io.rdata[24] is invalid @[alu.scala 72:14]
    io.rdata[25] is invalid @[alu.scala 72:14]
    io.rdata[26] is invalid @[alu.scala 72:14]
    io.rdata[27] is invalid @[alu.scala 72:14]
    io.rdata[28] is invalid @[alu.scala 72:14]
    io.rdata[29] is invalid @[alu.scala 72:14]
    io.rdata[30] is invalid @[alu.scala 72:14]
    io.rdata[31] is invalid @[alu.scala 72:14]
    io.rdata[32] is invalid @[alu.scala 72:14]
    io.rdata[33] is invalid @[alu.scala 72:14]
    io.rdata[34] is invalid @[alu.scala 72:14]
    node _T = eq(io.raddr[0], UInt<1>("h0")) @[alu.scala 74:26]
    when _T : @[alu.scala 74:34]
      io.rdata[0] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[0] <= reg[io.raddr[0]] @[alu.scala 77:25]
    node _T_1 = eq(io.raddr[1], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_1 : @[alu.scala 74:34]
      io.rdata[1] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[1] <= reg[io.raddr[1]] @[alu.scala 77:25]
    node _T_2 = eq(io.raddr[2], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_2 : @[alu.scala 74:34]
      io.rdata[2] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[2] <= reg[io.raddr[2]] @[alu.scala 77:25]
    node _T_3 = eq(io.raddr[3], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_3 : @[alu.scala 74:34]
      io.rdata[3] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[3] <= reg[io.raddr[3]] @[alu.scala 77:25]
    node _T_4 = eq(io.raddr[4], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_4 : @[alu.scala 74:34]
      io.rdata[4] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[4] <= reg[io.raddr[4]] @[alu.scala 77:25]
    node _T_5 = eq(io.raddr[5], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_5 : @[alu.scala 74:34]
      io.rdata[5] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[5] <= reg[io.raddr[5]] @[alu.scala 77:25]
    node _T_6 = eq(io.raddr[6], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_6 : @[alu.scala 74:34]
      io.rdata[6] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[6] <= reg[io.raddr[6]] @[alu.scala 77:25]
    node _T_7 = eq(io.raddr[7], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_7 : @[alu.scala 74:34]
      io.rdata[7] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[7] <= reg[io.raddr[7]] @[alu.scala 77:25]
    node _T_8 = eq(io.raddr[8], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_8 : @[alu.scala 74:34]
      io.rdata[8] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[8] <= reg[io.raddr[8]] @[alu.scala 77:25]
    node _T_9 = eq(io.raddr[9], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_9 : @[alu.scala 74:34]
      io.rdata[9] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[9] <= reg[io.raddr[9]] @[alu.scala 77:25]
    node _T_10 = eq(io.raddr[10], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_10 : @[alu.scala 74:34]
      io.rdata[10] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[10] <= reg[io.raddr[10]] @[alu.scala 77:25]
    node _T_11 = eq(io.raddr[11], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_11 : @[alu.scala 74:34]
      io.rdata[11] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[11] <= reg[io.raddr[11]] @[alu.scala 77:25]
    node _T_12 = eq(io.raddr[12], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_12 : @[alu.scala 74:34]
      io.rdata[12] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[12] <= reg[io.raddr[12]] @[alu.scala 77:25]
    node _T_13 = eq(io.raddr[13], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_13 : @[alu.scala 74:34]
      io.rdata[13] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[13] <= reg[io.raddr[13]] @[alu.scala 77:25]
    node _T_14 = eq(io.raddr[14], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_14 : @[alu.scala 74:34]
      io.rdata[14] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[14] <= reg[io.raddr[14]] @[alu.scala 77:25]
    node _T_15 = eq(io.raddr[15], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_15 : @[alu.scala 74:34]
      io.rdata[15] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[15] <= reg[io.raddr[15]] @[alu.scala 77:25]
    node _T_16 = eq(io.raddr[16], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_16 : @[alu.scala 74:34]
      io.rdata[16] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[16] <= reg[io.raddr[16]] @[alu.scala 77:25]
    node _T_17 = eq(io.raddr[17], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_17 : @[alu.scala 74:34]
      io.rdata[17] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[17] <= reg[io.raddr[17]] @[alu.scala 77:25]
    node _T_18 = eq(io.raddr[18], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_18 : @[alu.scala 74:34]
      io.rdata[18] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[18] <= reg[io.raddr[18]] @[alu.scala 77:25]
    node _T_19 = eq(io.raddr[19], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_19 : @[alu.scala 74:34]
      io.rdata[19] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[19] <= reg[io.raddr[19]] @[alu.scala 77:25]
    node _T_20 = eq(io.raddr[20], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_20 : @[alu.scala 74:34]
      io.rdata[20] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[20] <= reg[io.raddr[20]] @[alu.scala 77:25]
    node _T_21 = eq(io.raddr[21], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_21 : @[alu.scala 74:34]
      io.rdata[21] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[21] <= reg[io.raddr[21]] @[alu.scala 77:25]
    node _T_22 = eq(io.raddr[22], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_22 : @[alu.scala 74:34]
      io.rdata[22] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[22] <= reg[io.raddr[22]] @[alu.scala 77:25]
    node _T_23 = eq(io.raddr[23], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_23 : @[alu.scala 74:34]
      io.rdata[23] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[23] <= reg[io.raddr[23]] @[alu.scala 77:25]
    node _T_24 = eq(io.raddr[24], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_24 : @[alu.scala 74:34]
      io.rdata[24] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[24] <= reg[io.raddr[24]] @[alu.scala 77:25]
    node _T_25 = eq(io.raddr[25], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_25 : @[alu.scala 74:34]
      io.rdata[25] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[25] <= reg[io.raddr[25]] @[alu.scala 77:25]
    node _T_26 = eq(io.raddr[26], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_26 : @[alu.scala 74:34]
      io.rdata[26] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[26] <= reg[io.raddr[26]] @[alu.scala 77:25]
    node _T_27 = eq(io.raddr[27], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_27 : @[alu.scala 74:34]
      io.rdata[27] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[27] <= reg[io.raddr[27]] @[alu.scala 77:25]
    node _T_28 = eq(io.raddr[28], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_28 : @[alu.scala 74:34]
      io.rdata[28] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[28] <= reg[io.raddr[28]] @[alu.scala 77:25]
    node _T_29 = eq(io.raddr[29], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_29 : @[alu.scala 74:34]
      io.rdata[29] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[29] <= reg[io.raddr[29]] @[alu.scala 77:25]
    node _T_30 = eq(io.raddr[30], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_30 : @[alu.scala 74:34]
      io.rdata[30] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[30] <= reg[io.raddr[30]] @[alu.scala 77:25]
    node _T_31 = eq(io.raddr[31], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_31 : @[alu.scala 74:34]
      io.rdata[31] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[31] <= reg[io.raddr[31]] @[alu.scala 77:25]
    node _T_32 = eq(io.raddr[32], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_32 : @[alu.scala 74:34]
      io.rdata[32] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[32] <= reg[io.raddr[32]] @[alu.scala 77:25]
    node _T_33 = eq(io.raddr[33], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_33 : @[alu.scala 74:34]
      io.rdata[33] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[33] <= reg[io.raddr[33]] @[alu.scala 77:25]
    node _T_34 = eq(io.raddr[34], UInt<1>("h0")) @[alu.scala 74:26]
    when _T_34 : @[alu.scala 74:34]
      io.rdata[34] <= UInt<1>("h0") @[alu.scala 75:25]
    else :
      io.rdata[34] <= reg[io.raddr[34]] @[alu.scala 77:25]

  extmodule gpr_ptr :
    input clock : Clock
    input reset : UInt<1>
    input regfile : UInt<64>[32]
    defname = gpr_ptr

  extmodule ebreak :
    input enable : UInt<1>
    defname = ebreak

  module myCPU :
    input clock : Clock
    input reset : UInt<1>
    output io : { dat_addr : UInt<64>, pc_addr : UInt<64>, wen : UInt<1>, wdata : UInt<64>, flip rdata : UInt<64>, flip instr : UInt<32>, pc_debug : UInt<64>}

    io.wen <= UInt<1>("h0") @[alu.scala 126:12]
    io.wdata <= UInt<64>("h0") @[alu.scala 127:14]
    io.dat_addr <= UInt<64>("h0") @[alu.scala 128:17]
    inst regFile of RegisterFile @[alu.scala 130:25]
    regFile.clock <= clock
    regFile.reset <= reset
    wire is_4 : UInt<1>
    is_4 <= UInt<1>("h0")
    wire pc_remote : UInt<64>
    pc_remote <= UInt<64>("h80000000")
    reg pc : UInt<64>, clock with :
      reset => (reset, UInt<64>("h80000000")) @[alu.scala 133:21]
    reg instr : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[alu.scala 134:24]
    inst reg_debug of gpr_ptr @[alu.scala 136:31]
    reg_debug.regfile is invalid
    reg_debug.reset is invalid
    reg_debug.clock is invalid
    reg_debug.clock <= clock @[alu.scala 137:28]
    reg_debug.reset <= reset @[alu.scala 138:28]
    regFile.io.raddr[3] <= UInt<1>("h0") @[alu.scala 141:37]
    reg_debug.regfile[0] <= regFile.io.rdata[3] @[alu.scala 142:43]
    regFile.io.raddr[4] <= UInt<1>("h1") @[alu.scala 141:37]
    reg_debug.regfile[1] <= regFile.io.rdata[4] @[alu.scala 142:43]
    regFile.io.raddr[5] <= UInt<2>("h2") @[alu.scala 141:37]
    reg_debug.regfile[2] <= regFile.io.rdata[5] @[alu.scala 142:43]
    regFile.io.raddr[6] <= UInt<2>("h3") @[alu.scala 141:37]
    reg_debug.regfile[3] <= regFile.io.rdata[6] @[alu.scala 142:43]
    regFile.io.raddr[7] <= UInt<3>("h4") @[alu.scala 141:37]
    reg_debug.regfile[4] <= regFile.io.rdata[7] @[alu.scala 142:43]
    regFile.io.raddr[8] <= UInt<3>("h5") @[alu.scala 141:37]
    reg_debug.regfile[5] <= regFile.io.rdata[8] @[alu.scala 142:43]
    regFile.io.raddr[9] <= UInt<3>("h6") @[alu.scala 141:37]
    reg_debug.regfile[6] <= regFile.io.rdata[9] @[alu.scala 142:43]
    regFile.io.raddr[10] <= UInt<3>("h7") @[alu.scala 141:37]
    reg_debug.regfile[7] <= regFile.io.rdata[10] @[alu.scala 142:43]
    regFile.io.raddr[11] <= UInt<4>("h8") @[alu.scala 141:37]
    reg_debug.regfile[8] <= regFile.io.rdata[11] @[alu.scala 142:43]
    regFile.io.raddr[12] <= UInt<4>("h9") @[alu.scala 141:37]
    reg_debug.regfile[9] <= regFile.io.rdata[12] @[alu.scala 142:43]
    regFile.io.raddr[13] <= UInt<4>("ha") @[alu.scala 141:37]
    reg_debug.regfile[10] <= regFile.io.rdata[13] @[alu.scala 142:43]
    regFile.io.raddr[14] <= UInt<4>("hb") @[alu.scala 141:37]
    reg_debug.regfile[11] <= regFile.io.rdata[14] @[alu.scala 142:43]
    regFile.io.raddr[15] <= UInt<4>("hc") @[alu.scala 141:37]
    reg_debug.regfile[12] <= regFile.io.rdata[15] @[alu.scala 142:43]
    regFile.io.raddr[16] <= UInt<4>("hd") @[alu.scala 141:37]
    reg_debug.regfile[13] <= regFile.io.rdata[16] @[alu.scala 142:43]
    regFile.io.raddr[17] <= UInt<4>("he") @[alu.scala 141:37]
    reg_debug.regfile[14] <= regFile.io.rdata[17] @[alu.scala 142:43]
    regFile.io.raddr[18] <= UInt<4>("hf") @[alu.scala 141:37]
    reg_debug.regfile[15] <= regFile.io.rdata[18] @[alu.scala 142:43]
    regFile.io.raddr[19] <= UInt<5>("h10") @[alu.scala 141:37]
    reg_debug.regfile[16] <= regFile.io.rdata[19] @[alu.scala 142:43]
    regFile.io.raddr[20] <= UInt<5>("h11") @[alu.scala 141:37]
    reg_debug.regfile[17] <= regFile.io.rdata[20] @[alu.scala 142:43]
    regFile.io.raddr[21] <= UInt<5>("h12") @[alu.scala 141:37]
    reg_debug.regfile[18] <= regFile.io.rdata[21] @[alu.scala 142:43]
    regFile.io.raddr[22] <= UInt<5>("h13") @[alu.scala 141:37]
    reg_debug.regfile[19] <= regFile.io.rdata[22] @[alu.scala 142:43]
    regFile.io.raddr[23] <= UInt<5>("h14") @[alu.scala 141:37]
    reg_debug.regfile[20] <= regFile.io.rdata[23] @[alu.scala 142:43]
    regFile.io.raddr[24] <= UInt<5>("h15") @[alu.scala 141:37]
    reg_debug.regfile[21] <= regFile.io.rdata[24] @[alu.scala 142:43]
    regFile.io.raddr[25] <= UInt<5>("h16") @[alu.scala 141:37]
    reg_debug.regfile[22] <= regFile.io.rdata[25] @[alu.scala 142:43]
    regFile.io.raddr[26] <= UInt<5>("h17") @[alu.scala 141:37]
    reg_debug.regfile[23] <= regFile.io.rdata[26] @[alu.scala 142:43]
    regFile.io.raddr[27] <= UInt<5>("h18") @[alu.scala 141:37]
    reg_debug.regfile[24] <= regFile.io.rdata[27] @[alu.scala 142:43]
    regFile.io.raddr[28] <= UInt<5>("h19") @[alu.scala 141:37]
    reg_debug.regfile[25] <= regFile.io.rdata[28] @[alu.scala 142:43]
    regFile.io.raddr[29] <= UInt<5>("h1a") @[alu.scala 141:37]
    reg_debug.regfile[26] <= regFile.io.rdata[29] @[alu.scala 142:43]
    regFile.io.raddr[30] <= UInt<5>("h1b") @[alu.scala 141:37]
    reg_debug.regfile[27] <= regFile.io.rdata[30] @[alu.scala 142:43]
    regFile.io.raddr[31] <= UInt<5>("h1c") @[alu.scala 141:37]
    reg_debug.regfile[28] <= regFile.io.rdata[31] @[alu.scala 142:43]
    regFile.io.raddr[32] <= UInt<5>("h1d") @[alu.scala 141:37]
    reg_debug.regfile[29] <= regFile.io.rdata[32] @[alu.scala 142:43]
    regFile.io.raddr[33] <= UInt<5>("h1e") @[alu.scala 141:37]
    reg_debug.regfile[30] <= regFile.io.rdata[33] @[alu.scala 142:43]
    regFile.io.raddr[34] <= UInt<5>("h1f") @[alu.scala 141:37]
    reg_debug.regfile[31] <= regFile.io.rdata[34] @[alu.scala 142:43]
    node _op_T = and(instr, UInt<7>("h7f")) @[alu.scala 159:34]
    wire op : UInt
    op <= _op_T
    node _func_T = and(instr, UInt<15>("h7000")) @[alu.scala 160:34]
    wire func : UInt
    func <= _func_T
    wire imm : UInt<32>
    imm <= UInt<32>("h0")
    wire imm_tmp : UInt<32>
    imm_tmp <= UInt<32>("h0")
    wire src1 : UInt<64>
    src1 <= UInt<64>("h0")
    wire src2 : UInt<64>
    src2 <= UInt<64>("h0")
    wire dest : UInt<64>
    dest <= UInt<64>("h0")
    inst ebreak of ebreak @[alu.scala 167:24]
    ebreak.enable is invalid
    regFile.io.wen <= UInt<1>("h0") @[alu.scala 169:24]
    regFile.io.waddr <= UInt<5>("h0") @[alu.scala 170:22]
    regFile.io.wdata <= UInt<64>("h0") @[alu.scala 171:22]
    regFile.io.raddr[0] <= UInt<5>("h0") @[alu.scala 173:29]
    regFile.io.raddr[1] <= UInt<5>("h0") @[alu.scala 173:29]
    regFile.io.raddr[2] <= UInt<5>("h0") @[alu.scala 173:29]
    node _is_4_T = and(instr, UInt<7>("h7f")) @[alu.scala 175:24]
    node _is_4_T_1 = eq(UInt<7>("h6f"), _is_4_T) @[alu.scala 175:24]
    node _is_4_T_2 = eq(_is_4_T_1, UInt<1>("h0")) @[alu.scala 175:24]
    node _is_4_T_3 = and(instr, UInt<15>("h707f")) @[alu.scala 175:41]
    node _is_4_T_4 = eq(UInt<7>("h67"), _is_4_T_3) @[alu.scala 175:41]
    node _is_4_T_5 = eq(_is_4_T_4, UInt<1>("h0")) @[alu.scala 175:41]
    node _is_4_T_6 = and(_is_4_T_2, _is_4_T_5) @[alu.scala 175:32]
    is_4 <= _is_4_T_6 @[alu.scala 175:14]
    node _pc_T = add(pc, UInt<3>("h4")) @[alu.scala 176:24]
    node _pc_T_1 = tail(_pc_T, 1) @[alu.scala 176:24]
    node _pc_T_2 = mux(is_4, _pc_T_1, pc_remote) @[alu.scala 176:14]
    pc <= _pc_T_2 @[alu.scala 176:8]
    io.pc_addr <= pc @[alu.scala 177:16]
    instr <= io.instr @[alu.scala 178:11]
    ebreak.enable <= UInt<1>("h0") @[alu.scala 180:22]
    node _T = and(instr, UInt<15>("h707f")) @[alu.scala 183:20]
    node _T_1 = eq(UInt<5>("h13"), _T) @[alu.scala 183:20]
    when _T_1 : @[alu.scala 184:9]
      node _regFile_io_raddr_0_T = and(instr, UInt<20>("hf8000")) @[alu.scala 185:39]
      node _regFile_io_raddr_0_T_1 = dshr(_regFile_io_raddr_0_T, UInt<4>("hf")) @[alu.scala 185:52]
      regFile.io.raddr[0] <= _regFile_io_raddr_0_T_1 @[alu.scala 185:29]
      src1 <= regFile.io.rdata[0] @[alu.scala 186:14]
      node _imm_T = and(instr, UInt<32>("hfff00000")) @[alu.scala 188:23]
      node _imm_T_1 = dshr(_imm_T, UInt<5>("h14")) @[alu.scala 188:36]
      imm <= _imm_T_1 @[alu.scala 188:13]
      node _src2_T = bits(imm, 11, 11) @[alu.scala 189:24]
      node _src2_T_1 = bits(_src2_T, 0, 0) @[alu.scala 189:32]
      node _src2_T_2 = mux(UInt<1>("h1"), UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 74:12]
      node _src2_T_3 = bits(imm, 11, 0) @[alu.scala 189:62]
      node _src2_T_4 = cat(_src2_T_2, _src2_T_3) @[Cat.scala 31:58]
      node _src2_T_5 = mux(UInt<1>("h0"), UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 74:12]
      node _src2_T_6 = bits(imm, 11, 0) @[alu.scala 189:93]
      node _src2_T_7 = cat(_src2_T_5, _src2_T_6) @[Cat.scala 31:58]
      node _src2_T_8 = mux(_src2_T_1, _src2_T_4, _src2_T_7) @[alu.scala 189:20]
      src2 <= _src2_T_8 @[alu.scala 189:14]
      regFile.io.wen <= UInt<1>("h1") @[alu.scala 191:24]
      node _regFile_io_waddr_T = and(instr, UInt<12>("hf80")) @[alu.scala 192:37]
      node _regFile_io_waddr_T_1 = dshr(_regFile_io_waddr_T, UInt<3>("h7")) @[alu.scala 192:50]
      regFile.io.waddr <= _regFile_io_waddr_T_1 @[alu.scala 192:26]
      node _dest_T = add(src1, src2) @[alu.scala 193:22]
      node _dest_T_1 = tail(_dest_T, 1) @[alu.scala 193:22]
      dest <= _dest_T_1 @[alu.scala 193:14]
      regFile.io.wdata <= dest @[alu.scala 194:26]
    else :
      node _T_2 = and(instr, UInt<7>("h7f")) @[alu.scala 196:22]
      node _T_3 = eq(UInt<5>("h17"), _T_2) @[alu.scala 196:22]
      when _T_3 : @[alu.scala 197:9]
        node _imm_T_2 = and(instr, UInt<32>("hfffff000")) @[alu.scala 198:31]
        node _imm_T_3 = dshr(_imm_T_2, UInt<4>("hc")) @[alu.scala 198:44]
        imm <= _imm_T_3 @[alu.scala 198:21]
        node _src1_T = bits(instr, 31, 31) @[alu.scala 199:34]
        node _src1_T_1 = bits(_src1_T, 0, 0) @[alu.scala 199:42]
        node _src1_T_2 = mux(UInt<1>("h1"), UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
        node _src1_T_3 = dshl(imm, UInt<4>("hc")) @[alu.scala 199:73]
        node _src1_T_4 = cat(_src1_T_2, _src1_T_3) @[Cat.scala 31:58]
        node _src1_T_5 = mux(UInt<1>("h0"), UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
        node _src1_T_6 = dshl(imm, UInt<4>("hc")) @[alu.scala 199:107]
        node _src1_T_7 = cat(_src1_T_5, _src1_T_6) @[Cat.scala 31:58]
        node _src1_T_8 = mux(_src1_T_1, _src1_T_4, _src1_T_7) @[alu.scala 199:28]
        src1 <= _src1_T_8 @[alu.scala 199:22]
        node _pc_remote_T = add(pc, src1) @[alu.scala 200:33]
        node _pc_remote_T_1 = tail(_pc_remote_T, 1) @[alu.scala 200:33]
        pc_remote <= _pc_remote_T_1 @[alu.scala 200:27]
        regFile.io.wen <= UInt<1>("h1") @[alu.scala 202:32]
        node _regFile_io_waddr_T_2 = and(instr, UInt<12>("hf80")) @[alu.scala 203:44]
        node _regFile_io_waddr_T_3 = dshr(_regFile_io_waddr_T_2, UInt<3>("h7")) @[alu.scala 203:57]
        regFile.io.waddr <= _regFile_io_waddr_T_3 @[alu.scala 203:34]
        node _dest_T_2 = add(pc, UInt<3>("h4")) @[alu.scala 204:28]
        node _dest_T_3 = tail(_dest_T_2, 1) @[alu.scala 204:28]
        dest <= _dest_T_3 @[alu.scala 204:22]
      else :
        node _T_4 = and(instr, UInt<7>("h7f")) @[alu.scala 206:27]
        node _T_5 = eq(UInt<6>("h37"), _T_4) @[alu.scala 206:27]
        when _T_5 : @[alu.scala 207:9]
          node _imm_T_4 = and(instr, UInt<32>("hfffff000")) @[alu.scala 208:31]
          node _imm_T_5 = dshr(_imm_T_4, UInt<4>("hc")) @[alu.scala 208:44]
          imm <= _imm_T_5 @[alu.scala 208:21]
          node _src1_T_9 = bits(instr, 31, 31) @[alu.scala 209:34]
          node _src1_T_10 = bits(_src1_T_9, 0, 0) @[alu.scala 209:42]
          node _src1_T_11 = mux(UInt<1>("h1"), UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
          node _src1_T_12 = dshl(imm, UInt<4>("hc")) @[alu.scala 209:73]
          node _src1_T_13 = cat(_src1_T_11, _src1_T_12) @[Cat.scala 31:58]
          node _src1_T_14 = mux(UInt<1>("h0"), UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
          node _src1_T_15 = dshl(imm, UInt<4>("hc")) @[alu.scala 209:107]
          node _src1_T_16 = cat(_src1_T_14, _src1_T_15) @[Cat.scala 31:58]
          node _src1_T_17 = mux(_src1_T_10, _src1_T_13, _src1_T_16) @[alu.scala 209:28]
          src1 <= _src1_T_17 @[alu.scala 209:22]
          dest <= src1 @[alu.scala 211:22]
          regFile.io.wen <= UInt<1>("h1") @[alu.scala 212:32]
          node _regFile_io_waddr_T_4 = and(instr, UInt<12>("hf80")) @[alu.scala 213:44]
          node _regFile_io_waddr_T_5 = dshr(_regFile_io_waddr_T_4, UInt<3>("h7")) @[alu.scala 213:57]
          regFile.io.waddr <= _regFile_io_waddr_T_5 @[alu.scala 213:34]
          regFile.io.wdata <= dest @[alu.scala 214:34]
        else :
          node _T_6 = and(instr, UInt<15>("h707f")) @[alu.scala 216:26]
          node _T_7 = eq(UInt<14>("h3023"), _T_6) @[alu.scala 216:26]
          when _T_7 : @[alu.scala 217:9]
            node _imm_tmp_T = and(instr, UInt<32>("hfe003000")) @[alu.scala 218:39]
            node _imm_tmp_T_1 = bits(_imm_tmp_T, 31, 25) @[alu.scala 218:51]
            node _imm_tmp_T_2 = and(instr, UInt<32>("hfe003000")) @[alu.scala 218:67]
            node _imm_tmp_T_3 = bits(_imm_tmp_T_2, 11, 7) @[alu.scala 218:79]
            node _imm_tmp_T_4 = cat(_imm_tmp_T_1, _imm_tmp_T_3) @[Cat.scala 31:58]
            imm_tmp <= _imm_tmp_T_4 @[alu.scala 218:25]
            node _imm_T_6 = bits(instr, 31, 31) @[alu.scala 219:33]
            node _imm_T_7 = bits(_imm_T_6, 0, 0) @[alu.scala 219:41]
            node _imm_T_8 = mux(UInt<1>("h1"), UInt<42>("h3ffffffffff"), UInt<42>("h0")) @[Bitwise.scala 74:12]
            node _imm_T_9 = bits(imm_tmp, 11, 0) @[alu.scala 219:75]
            node _imm_T_10 = cat(_imm_T_8, _imm_T_9) @[Cat.scala 31:58]
            node _imm_T_11 = mux(UInt<1>("h0"), UInt<42>("h3ffffffffff"), UInt<42>("h0")) @[Bitwise.scala 74:12]
            node _imm_T_12 = bits(imm_tmp, 11, 0) @[alu.scala 219:111]
            node _imm_T_13 = cat(_imm_T_11, _imm_T_12) @[Cat.scala 31:58]
            node _imm_T_14 = mux(_imm_T_7, _imm_T_10, _imm_T_13) @[alu.scala 219:27]
            imm <= _imm_T_14 @[alu.scala 219:21]
            io.wen <= UInt<1>("h1") @[alu.scala 220:24]
            node _regFile_io_raddr_0_T_2 = and(instr, UInt<20>("hf8000")) @[alu.scala 222:47]
            node _regFile_io_raddr_0_T_3 = dshr(_regFile_io_raddr_0_T_2, UInt<4>("hf")) @[alu.scala 222:60]
            regFile.io.raddr[0] <= _regFile_io_raddr_0_T_3 @[alu.scala 222:37]
            src1 <= regFile.io.rdata[0] @[alu.scala 223:22]
            node _regFile_io_raddr_1_T = and(instr, UInt<25>("h1f00000")) @[alu.scala 225:47]
            node _regFile_io_raddr_1_T_1 = dshr(_regFile_io_raddr_1_T, UInt<5>("h16")) @[alu.scala 225:60]
            regFile.io.raddr[1] <= _regFile_io_raddr_1_T_1 @[alu.scala 225:37]
            src2 <= regFile.io.rdata[1] @[alu.scala 226:22]
            io.wdata <= src2 @[alu.scala 228:18]
            node _io_dat_addr_T = add(src1, imm) @[alu.scala 229:29]
            node _io_dat_addr_T_1 = tail(_io_dat_addr_T, 1) @[alu.scala 229:29]
            io.dat_addr <= _io_dat_addr_T_1 @[alu.scala 229:21]
            io.wen <= UInt<1>("h1") @[alu.scala 230:24]
          else :
            node _T_8 = and(instr, UInt<7>("h7f")) @[alu.scala 232:26]
            node _T_9 = eq(UInt<7>("h6f"), _T_8) @[alu.scala 232:26]
            when _T_9 : @[alu.scala 233:9]
              node _imm_tmp_T_5 = and(instr, UInt<32>("hfffff000")) @[alu.scala 234:35]
              imm_tmp <= _imm_tmp_T_5 @[alu.scala 234:25]
              node _imm_T_15 = bits(imm_tmp, 31, 31) @[alu.scala 235:35]
              node _imm_T_16 = bits(imm_tmp, 19, 12) @[alu.scala 235:51]
              node _imm_T_17 = bits(imm_tmp, 20, 20) @[alu.scala 235:67]
              node _imm_T_18 = bits(imm_tmp, 30, 21) @[alu.scala 235:83]
              node imm_lo = cat(_imm_T_18, UInt<1>("h0")) @[Cat.scala 31:58]
              node imm_hi_hi = cat(_imm_T_15, _imm_T_16) @[Cat.scala 31:58]
              node imm_hi = cat(imm_hi_hi, _imm_T_17) @[Cat.scala 31:58]
              node _imm_T_19 = cat(imm_hi, imm_lo) @[Cat.scala 31:58]
              imm <= _imm_T_19 @[alu.scala 235:21]
              node _src1_T_18 = bits(instr, 31, 31) @[alu.scala 236:34]
              node _src1_T_19 = bits(_src1_T_18, 0, 0) @[alu.scala 236:42]
              node _src1_T_20 = mux(UInt<1>("h1"), UInt<43>("h7ffffffffff"), UInt<43>("h0")) @[Bitwise.scala 74:12]
              node _src1_T_21 = bits(imm, 20, 0) @[alu.scala 236:72]
              node _src1_T_22 = cat(_src1_T_20, _src1_T_21) @[Cat.scala 31:58]
              node _src1_T_23 = mux(UInt<1>("h0"), UInt<43>("h7ffffffffff"), UInt<43>("h0")) @[Bitwise.scala 74:12]
              node _src1_T_24 = bits(imm, 20, 0) @[alu.scala 236:103]
              node _src1_T_25 = cat(_src1_T_23, _src1_T_24) @[Cat.scala 31:58]
              node _src1_T_26 = mux(_src1_T_19, _src1_T_22, _src1_T_25) @[alu.scala 236:28]
              src1 <= _src1_T_26 @[alu.scala 236:22]
              node _pc_remote_T_2 = add(src1, pc) @[alu.scala 237:35]
              node _pc_remote_T_3 = tail(_pc_remote_T_2, 1) @[alu.scala 237:35]
              pc_remote <= _pc_remote_T_3 @[alu.scala 237:27]
              node _dest_T_4 = add(pc, UInt<3>("h4")) @[alu.scala 239:28]
              node _dest_T_5 = tail(_dest_T_4, 1) @[alu.scala 239:28]
              dest <= _dest_T_5 @[alu.scala 239:22]
              regFile.io.wen <= UInt<1>("h1") @[alu.scala 240:32]
              node _regFile_io_waddr_T_6 = and(instr, UInt<12>("hf80")) @[alu.scala 241:44]
              node _regFile_io_waddr_T_7 = dshr(_regFile_io_waddr_T_6, UInt<3>("h7")) @[alu.scala 241:57]
              regFile.io.waddr <= _regFile_io_waddr_T_7 @[alu.scala 241:34]
              regFile.io.wdata <= dest @[alu.scala 242:34]
            else :
              node _T_10 = and(instr, UInt<15>("h707f")) @[alu.scala 244:27]
              node _T_11 = eq(UInt<7>("h67"), _T_10) @[alu.scala 244:27]
              when _T_11 : @[alu.scala 245:9]
                node _regFile_io_raddr_0_T_4 = and(instr, UInt<20>("hf8000")) @[alu.scala 246:47]
                node _regFile_io_raddr_0_T_5 = dshr(_regFile_io_raddr_0_T_4, UInt<4>("hf")) @[alu.scala 246:60]
                regFile.io.raddr[0] <= _regFile_io_raddr_0_T_5 @[alu.scala 246:37]
                src1 <= regFile.io.rdata[0] @[alu.scala 247:14]
                node _imm_T_20 = and(instr, UInt<32>("hfff00000")) @[alu.scala 249:23]
                node _imm_T_21 = dshr(_imm_T_20, UInt<5>("h14")) @[alu.scala 249:36]
                imm <= _imm_T_21 @[alu.scala 249:13]
                node _src2_T_9 = bits(imm, 11, 11) @[alu.scala 250:24]
                node _src2_T_10 = bits(_src2_T_9, 0, 0) @[alu.scala 250:32]
                node _src2_T_11 = mux(UInt<1>("h1"), UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 74:12]
                node _src2_T_12 = bits(imm, 11, 0) @[alu.scala 250:62]
                node _src2_T_13 = cat(_src2_T_11, _src2_T_12) @[Cat.scala 31:58]
                node _src2_T_14 = mux(UInt<1>("h0"), UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 74:12]
                node _src2_T_15 = bits(imm, 11, 0) @[alu.scala 250:93]
                node _src2_T_16 = cat(_src2_T_14, _src2_T_15) @[Cat.scala 31:58]
                node _src2_T_17 = mux(_src2_T_10, _src2_T_13, _src2_T_16) @[alu.scala 250:20]
                src2 <= _src2_T_17 @[alu.scala 250:14]
                node _pc_remote_T_4 = add(src1, src2) @[alu.scala 252:36]
                node _pc_remote_T_5 = tail(_pc_remote_T_4, 1) @[alu.scala 252:36]
                node _pc_remote_T_6 = asUInt(asSInt(UInt<2>("h2"))) @[alu.scala 252:52]
                node _pc_remote_T_7 = and(_pc_remote_T_5, _pc_remote_T_6) @[alu.scala 252:43]
                pc_remote <= _pc_remote_T_7 @[alu.scala 252:27]
                regFile.io.wen <= UInt<1>("h1") @[alu.scala 254:24]
                node _regFile_io_waddr_T_8 = and(instr, UInt<12>("hf80")) @[alu.scala 255:37]
                node _regFile_io_waddr_T_9 = dshr(_regFile_io_waddr_T_8, UInt<3>("h7")) @[alu.scala 255:50]
                regFile.io.waddr <= _regFile_io_waddr_T_9 @[alu.scala 255:26]
                node _dest_T_6 = add(pc, UInt<3>("h4")) @[alu.scala 256:20]
                node _dest_T_7 = tail(_dest_T_6, 1) @[alu.scala 256:20]
                dest <= _dest_T_7 @[alu.scala 256:14]
                regFile.io.wdata <= dest @[alu.scala 257:26]
              else :
                node _T_12 = and(instr, UInt<32>("hffffffff")) @[alu.scala 259:26]
                node _T_13 = eq(UInt<21>("h100073"), _T_12) @[alu.scala 259:26]
                when _T_13 : @[alu.scala 260:9]
                  ebreak.enable <= UInt<1>("h1") @[alu.scala 261:26]
    reg pc_tmp : UInt, clock with :
      reset => (UInt<1>("h0"), pc_tmp) @[alu.scala 264:29]
    pc_tmp <= pc @[alu.scala 264:29]
    io.pc_debug <= pc_tmp @[alu.scala 265:21]

